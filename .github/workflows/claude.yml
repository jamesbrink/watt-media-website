name: Claude Code

# This workflow enables Claude Opus 4 to assist with development tasks via GitHub comments
# Claude has full access to run commands, edit files, and interact with the codebase
# 
# Permissions explained:
# - contents: write - Allows Claude to create/edit files and push commits
# - pull-requests: write - Enables Claude to comment on and modify PRs
# - issues: write - Allows Claude to comment on and update issues
# - id-token: write - Required for OIDC authentication with the Claude Code Action
# - actions: read - Enables Claude to read CI/CD results and logs
#
# Tools access:
# - Bash(*) - Full command line access for any development tasks
# - File manipulation tools - Complete read/write access to codebase
# - Search tools - Can search and analyze the entire repository
# - Web tools - Can fetch documentation and search for solutions

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write # Required for GitHub OIDC token authentication
      actions: read # Required for Claude to read CI results on PRs
      checks: write # Allow Claude to create check runs
      statuses: write # Allow Claude to update commit statuses
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better context

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is required for full Bash access and CI integration
          additional_permissions: |
            actions: read
            checks: write
            statuses: write
          
          # Specify model - using Claude Opus 4 for maximum capability
          model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Allow Claude to run all development, testing, and code manipulation commands
          allowed_tools: "Bash(*),Edit,MultiEdit,Write,Read,Grep,Glob,LS,WebFetch,WebSearch,TodoWrite"
          
          # Custom instructions for Claude to follow project standards
          custom_instructions: |
            Follow the project's coding standards as defined in CLAUDE.md
            Use Astro framework conventions for all pages and components
            Maintain Tailwind CSS for styling
            Ensure proper TypeScript types when applicable
            Run lint and typecheck before suggesting changes
            Use professional "we" language, not first-person "I" statements
            Follow the design standards for colors and styling specified in CLAUDE.md
            
            Environment:
            - Node.js 20 is installed
            - Dependencies are already installed via npm ci
            - Working directory is the repository root
            - You can run any npm scripts defined in package.json
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

